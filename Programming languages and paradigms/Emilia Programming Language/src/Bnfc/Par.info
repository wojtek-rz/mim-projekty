-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Bnfc/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Block -> '{' ListStmt '}'                          (5)
	ListStmt ->                                        (6)
	ListStmt -> Stmt                                   (7)
	ListStmt -> Stmt ';' ListStmt                      (8)
	Stmt -> Ident ':=' Expr                            (9)
	Stmt -> 'pass'                                     (10)
	Stmt -> Ident '<-' Expr                            (11)
	Stmt -> 'if' Expr ':' Block                        (12)
	Stmt -> 'if' Expr ':' Block 'else' ':' Block       (13)
	Stmt -> 'while' Expr ':' Block                     (14)
	Stmt -> Expr                                       (15)
	Stmt -> 'return' Expr                              (16)
	Stmt -> 'return'                                   (17)
	Expr6 -> Ident                                     (18)
	Expr6 -> Integer                                   (19)
	Expr6 -> 'True'                                    (20)
	Expr6 -> 'False'                                   (21)
	Expr6 -> '(' ListArg ')' '->' Type '(' Expr ')'    (22)
	Expr6 -> '(' ListArg ')' '->' Type ':' Block       (23)
	Expr6 -> Ident '(' ListExpr ')'                    (24)
	Expr6 -> String                                    (25)
	Expr6 -> '(' Expr ')'                              (26)
	Arg -> Ident '|' ArgType                           (27)
	ListArg ->                                         (28)
	ListArg -> Arg                                     (29)
	ListArg -> Arg ',' ListArg                         (30)
	Expr5 -> Expr5 '++' Expr6                          (31)
	Expr5 -> '-' Expr6                                 (32)
	Expr5 -> 'not' Expr6                               (33)
	Expr5 -> Expr6                                     (34)
	Expr4 -> Expr4 MulOp Expr5                         (35)
	Expr4 -> Expr5                                     (36)
	Expr3 -> Expr3 AddOp Expr4                         (37)
	Expr3 -> Expr4                                     (38)
	Expr2 -> Expr2 RelOp Expr3                         (39)
	Expr2 -> Expr2 '=' Expr3                           (40)
	Expr2 -> Expr2 '!=' Expr3                          (41)
	Expr2 -> Expr3                                     (42)
	Expr1 -> Expr2 '&&' Expr1                          (43)
	Expr1 -> Expr2                                     (44)
	Expr -> Expr1 '||' Expr                            (45)
	Expr -> Expr1                                      (46)
	ListExpr ->                                        (47)
	ListExpr -> Expr                                   (48)
	ListExpr -> Expr ',' ListExpr                      (49)
	Type -> 'Int'                                      (50)
	Type -> 'Str'                                      (51)
	Type -> 'Bool'                                     (52)
	Type -> 'Void'                                     (53)
	Type -> '(' ListArgType ')' '->' Type              (54)
	ListArgType ->                                     (55)
	ListArgType -> ArgType                             (56)
	ListArgType -> ArgType ',' ListArgType             (57)
	ArgType -> Type                                    (58)
	ArgType -> '*' Type                                (59)
	AddOp -> '+'                                       (60)
	AddOp -> '-'                                       (61)
	MulOp -> '*'                                       (62)
	MulOp -> '/'                                       (63)
	MulOp -> '%'                                       (64)
	RelOp -> '<'                                       (65)
	RelOp -> '<='                                      (66)
	RelOp -> '>'                                       (67)
	RelOp -> '>='                                      (68)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'&&'           { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	'++'           { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'->'           { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	':'            { PT _ (TS _ 13) }
	':='           { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<-'           { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'Bool'         { PT _ (TS _ 22) }
	'False'        { PT _ (TS _ 23) }
	'Int'          { PT _ (TS _ 24) }
	'Str'          { PT _ (TS _ 25) }
	'True'         { PT _ (TS _ 26) }
	'Void'         { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'if'           { PT _ (TS _ 29) }
	'not'          { PT _ (TS _ 30) }
	'pass'         { PT _ (TS _ 31) }
	'return'       { PT _ (TS _ 32) }
	'while'        { PT _ (TS _ 33) }
	'{'            { PT _ (TS _ 34) }
	'|'            { PT _ (TS _ 35) }
	'||'           { PT _ (TS _ 36) }
	'}'            { PT _ (TS _ 37) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Block           rule  5
	ListStmt        rules 6, 7, 8
	Stmt            rules 9, 10, 11, 12, 13, 14, 15, 16, 17
	Expr6           rules 18, 19, 20, 21, 22, 23, 24, 25, 26
	Arg             rule  27
	ListArg         rules 28, 29, 30
	Expr5           rules 31, 32, 33, 34
	Expr4           rules 35, 36
	Expr3           rules 37, 38
	Expr2           rules 39, 40, 41, 42
	Expr1           rules 43, 44
	Expr            rules 45, 46
	ListExpr        rules 47, 48, 49
	Type            rules 50, 51, 52, 53, 54
	ListArgType     rules 55, 56, 57
	ArgType         rules 58, 59
	AddOp           rules 60, 61
	MulOp           rules 62, 63, 64
	RelOp           rules 65, 66, 67, 68

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'if'           shift, and enter state 20
	'not'          shift, and enter state 21
	'pass'         shift, and enter state 22
	'return'       shift, and enter state 23
	'while'        shift, and enter state 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26
	%eof           reduce using rule 6

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	ListStmt       goto state 7
	Stmt           goto state 8
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 15

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	':='           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<-'           reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'|'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	%eof           reduce using rule 1


State 3

	Stmt -> Ident . ':=' Expr                           (rule 9)
	Stmt -> Ident . '<-' Expr                           (rule 11)
	Expr6 -> Ident .                                    (rule 18)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 24)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	'('            shift, and enter state 55
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	'++'           reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	':='           shift, and enter state 56
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<-'           shift, and enter state 57
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 4

	Expr6 -> Integer .                                  (rule 19)

	'!='           reduce using rule 19
	'%'            reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	'++'           reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'/'            reduce using rule 19
	':'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19


State 5

	Expr6 -> String .                                   (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	'++'           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	':'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'||'           reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 8

	ListStmt -> Stmt .                                  (rule 7)
	ListStmt -> Stmt . ';' ListStmt                     (rule 8)

	';'            shift, and enter state 54
	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 9

	Expr5 -> Expr6 .                                    (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'++'           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	':'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34
	'}'            reduce using rule 34
	%eof           reduce using rule 34


State 10

	Expr5 -> Expr5 . '++' Expr6                         (rule 31)
	Expr4 -> Expr5 .                                    (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	'++'           shift, and enter state 53
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	':'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36
	'}'            reduce using rule 36
	%eof           reduce using rule 36


State 11

	Expr4 -> Expr4 . MulOp Expr5                        (rule 35)
	Expr3 -> Expr4 .                                    (rule 38)

	'!='           reduce using rule 38
	'%'            shift, and enter state 50
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            shift, and enter state 51
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            shift, and enter state 52
	':'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38

	MulOp          goto state 49

State 12

	Expr3 -> Expr3 . AddOp Expr4                        (rule 37)
	Expr2 -> Expr3 .                                    (rule 42)

	'!='           reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'+'            shift, and enter state 47
	','            reduce using rule 42
	'-'            shift, and enter state 48
	':'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42

	AddOp          goto state 46

State 13

	Expr2 -> Expr2 . RelOp Expr3                        (rule 39)
	Expr2 -> Expr2 . '=' Expr3                          (rule 40)
	Expr2 -> Expr2 . '!=' Expr3                         (rule 41)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 43)
	Expr1 -> Expr2 .                                    (rule 44)

	'!='           shift, and enter state 39
	'&&'           shift, and enter state 40
	')'            reduce using rule 44
	','            reduce using rule 44
	':'            reduce using rule 44
	';'            reduce using rule 44
	'<'            shift, and enter state 41
	'<='           shift, and enter state 42
	'='            shift, and enter state 43
	'>'            shift, and enter state 44
	'>='           shift, and enter state 45
	'||'           reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44

	RelOp          goto state 38

State 14

	Expr -> Expr1 . '||' Expr                           (rule 45)
	Expr -> Expr1 .                                     (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	':'            reduce using rule 46
	';'            reduce using rule 46
	'||'           shift, and enter state 37
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 15

	Stmt -> Expr .                                      (rule 15)

	';'            reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 16

	Expr6 -> '(' . ListArg ')' '->' Type '(' Expr ')'    (rule 22)
	Expr6 -> '(' . ListArg ')' '->' Type ':' Block      (rule 23)
	Expr6 -> '(' . Expr ')'                             (rule 26)

	'('            shift, and enter state 16
	')'            reduce using rule 28
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 33
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Arg            goto state 34
	ListArg        goto state 35
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 36

State 17

	Expr5 -> '-' . Expr6                                (rule 32)

	'('            shift, and enter state 16
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 32

State 18

	Expr6 -> 'False' .                                  (rule 21)

	'!='           reduce using rule 21
	'%'            reduce using rule 21
	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	'++'           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'/'            reduce using rule 21
	':'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 19

	Expr6 -> 'True' .                                   (rule 20)

	'!='           reduce using rule 20
	'%'            reduce using rule 20
	'&&'           reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	'++'           reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	':'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 20

	Stmt -> 'if' . Expr ':' Block                       (rule 12)
	Stmt -> 'if' . Expr ':' Block 'else' ':' Block      (rule 13)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 31

State 21

	Expr5 -> 'not' . Expr6                              (rule 33)

	'('            shift, and enter state 16
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 30

State 22

	Stmt -> 'pass' .                                    (rule 10)

	';'            reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 23

	Stmt -> 'return' . Expr                             (rule 16)
	Stmt -> 'return' .                                  (rule 17)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	';'            reduce using rule 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	'}'            reduce using rule 17
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26
	%eof           reduce using rule 17

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 29

State 24

	Stmt -> 'while' . Expr ':' Block                    (rule 14)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 28

State 25

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	'++'           reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	%eof           reduce using rule 2


State 26

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	'++'           reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	%eof           reduce using rule 3


State 27

	Expr6 -> Ident .                                    (rule 18)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 24)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	'('            shift, and enter state 55
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	'++'           reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	':'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 28

	Stmt -> 'while' Expr . ':' Block                    (rule 14)

	':'            shift, and enter state 76


State 29

	Stmt -> 'return' Expr .                             (rule 16)

	';'            reduce using rule 16
	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 30

	Expr5 -> 'not' Expr6 .                              (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	'++'           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	':'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'='            reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'||'           reduce using rule 33
	'}'            reduce using rule 33
	%eof           reduce using rule 33


State 31

	Stmt -> 'if' Expr . ':' Block                       (rule 12)
	Stmt -> 'if' Expr . ':' Block 'else' ':' Block      (rule 13)

	':'            shift, and enter state 75


State 32

	Expr5 -> '-' Expr6 .                                (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	'++'           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	':'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'||'           reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 33

	Expr6 -> Ident .                                    (rule 18)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 24)
	Arg -> Ident . '|' ArgType                          (rule 27)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	'('            shift, and enter state 55
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	'++'           reduce using rule 18
	'-'            reduce using rule 18
	'/'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'|'            shift, and enter state 74
	'||'           reduce using rule 18


State 34

	ListArg -> Arg .                                    (rule 29)
	ListArg -> Arg . ',' ListArg                        (rule 30)

	')'            reduce using rule 29
	','            shift, and enter state 73


State 35

	Expr6 -> '(' ListArg . ')' '->' Type '(' Expr ')'    (rule 22)
	Expr6 -> '(' ListArg . ')' '->' Type ':' Block      (rule 23)

	')'            shift, and enter state 72


State 36

	Expr6 -> '(' Expr . ')'                             (rule 26)

	')'            shift, and enter state 71


State 37

	Expr -> Expr1 '||' . Expr                           (rule 45)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 70

State 38

	Expr2 -> Expr2 RelOp . Expr3                        (rule 39)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 69

State 39

	Expr2 -> Expr2 '!=' . Expr3                         (rule 41)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 68

State 40

	Expr1 -> Expr2 '&&' . Expr1                         (rule 43)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 67

State 41

	RelOp -> '<' .                                      (rule 65)

	'('            reduce using rule 65
	'-'            reduce using rule 65
	'False'        reduce using rule 65
	'True'         reduce using rule 65
	'not'          reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 42

	RelOp -> '<=' .                                     (rule 66)

	'('            reduce using rule 66
	'-'            reduce using rule 66
	'False'        reduce using rule 66
	'True'         reduce using rule 66
	'not'          reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 43

	Expr2 -> Expr2 '=' . Expr3                          (rule 40)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 66

State 44

	RelOp -> '>' .                                      (rule 67)

	'('            reduce using rule 67
	'-'            reduce using rule 67
	'False'        reduce using rule 67
	'True'         reduce using rule 67
	'not'          reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 45

	RelOp -> '>=' .                                     (rule 68)

	'('            reduce using rule 68
	'-'            reduce using rule 68
	'False'        reduce using rule 68
	'True'         reduce using rule 68
	'not'          reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 46

	Expr3 -> Expr3 AddOp . Expr4                        (rule 37)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 65

State 47

	AddOp -> '+' .                                      (rule 60)

	'('            reduce using rule 60
	'-'            reduce using rule 60
	'False'        reduce using rule 60
	'True'         reduce using rule 60
	'not'          reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 48

	AddOp -> '-' .                                      (rule 61)

	'('            reduce using rule 61
	'-'            reduce using rule 61
	'False'        reduce using rule 61
	'True'         reduce using rule 61
	'not'          reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 49

	Expr4 -> Expr4 MulOp . Expr5                        (rule 35)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 64

State 50

	MulOp -> '%' .                                      (rule 64)

	'('            reduce using rule 64
	'-'            reduce using rule 64
	'False'        reduce using rule 64
	'True'         reduce using rule 64
	'not'          reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 51

	MulOp -> '*' .                                      (rule 62)

	'('            reduce using rule 62
	'-'            reduce using rule 62
	'False'        reduce using rule 62
	'True'         reduce using rule 62
	'not'          reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 52

	MulOp -> '/' .                                      (rule 63)

	'('            reduce using rule 63
	'-'            reduce using rule 63
	'False'        reduce using rule 63
	'True'         reduce using rule 63
	'not'          reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 53

	Expr5 -> Expr5 '++' . Expr6                         (rule 31)

	'('            shift, and enter state 16
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 63

State 54

	ListStmt -> Stmt ';' . ListStmt                     (rule 8)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'if'           shift, and enter state 20
	'not'          shift, and enter state 21
	'pass'         shift, and enter state 22
	'return'       shift, and enter state 23
	'while'        shift, and enter state 24
	'}'            reduce using rule 6
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26
	%eof           reduce using rule 6

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	ListStmt       goto state 62
	Stmt           goto state 8
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 15

State 55

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 24)

	'('            shift, and enter state 16
	')'            reduce using rule 47
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 60
	ListExpr       goto state 61

State 56

	Stmt -> Ident ':=' . Expr                           (rule 9)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 59

State 57

	Stmt -> Ident '<-' . Expr                           (rule 11)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 58

State 58

	Stmt -> Ident '<-' Expr .                           (rule 11)

	';'            reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 59

	Stmt -> Ident ':=' Expr .                           (rule 9)

	';'            reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 60

	ListExpr -> Expr .                                  (rule 48)
	ListExpr -> Expr . ',' ListExpr                     (rule 49)

	')'            reduce using rule 48
	','            shift, and enter state 92


State 61

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 24)

	')'            shift, and enter state 91


State 62

	ListStmt -> Stmt ';' ListStmt .                     (rule 8)

	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 63

	Expr5 -> Expr5 '++' Expr6 .                         (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	'++'           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	':'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'||'           reduce using rule 31
	'}'            reduce using rule 31
	%eof           reduce using rule 31


State 64

	Expr5 -> Expr5 . '++' Expr6                         (rule 31)
	Expr4 -> Expr4 MulOp Expr5 .                        (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	'++'           shift, and enter state 53
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	':'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35
	'}'            reduce using rule 35
	%eof           reduce using rule 35


State 65

	Expr4 -> Expr4 . MulOp Expr5                        (rule 35)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 37)

	'!='           reduce using rule 37
	'%'            shift, and enter state 50
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            shift, and enter state 51
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            shift, and enter state 52
	':'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37
	'}'            reduce using rule 37
	%eof           reduce using rule 37

	MulOp          goto state 49

State 66

	Expr3 -> Expr3 . AddOp Expr4                        (rule 37)
	Expr2 -> Expr2 '=' Expr3 .                          (rule 40)

	'!='           reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'+'            shift, and enter state 47
	','            reduce using rule 40
	'-'            shift, and enter state 48
	':'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40
	'}'            reduce using rule 40
	%eof           reduce using rule 40

	AddOp          goto state 46

State 67

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	':'            reduce using rule 43
	';'            reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 68

	Expr3 -> Expr3 . AddOp Expr4                        (rule 37)
	Expr2 -> Expr2 '!=' Expr3 .                         (rule 41)

	'!='           reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'+'            shift, and enter state 47
	','            reduce using rule 41
	'-'            shift, and enter state 48
	':'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41

	AddOp          goto state 46

State 69

	Expr3 -> Expr3 . AddOp Expr4                        (rule 37)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 39)

	'!='           reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'+'            shift, and enter state 47
	','            reduce using rule 39
	'-'            shift, and enter state 48
	':'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39

	AddOp          goto state 46

State 70

	Expr -> Expr1 '||' Expr .                           (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	':'            reduce using rule 45
	';'            reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 71

	Expr6 -> '(' Expr ')' .                             (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	'++'           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'/'            reduce using rule 26
	':'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'||'           reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 72

	Expr6 -> '(' ListArg ')' . '->' Type '(' Expr ')'    (rule 22)
	Expr6 -> '(' ListArg ')' . '->' Type ':' Block      (rule 23)

	'->'           shift, and enter state 90


State 73

	ListArg -> Arg ',' . ListArg                        (rule 30)

	')'            reduce using rule 28
	L_Ident        shift, and enter state 2

	Ident          goto state 88
	Arg            goto state 34
	ListArg        goto state 89

State 74

	Arg -> Ident '|' . ArgType                          (rule 27)

	'('            shift, and enter state 82
	'*'            shift, and enter state 83
	'Bool'         shift, and enter state 84
	'Int'          shift, and enter state 85
	'Str'          shift, and enter state 86
	'Void'         shift, and enter state 87

	Type           goto state 80
	ArgType        goto state 81

State 75

	Stmt -> 'if' Expr ':' . Block                       (rule 12)
	Stmt -> 'if' Expr ':' . Block 'else' ':' Block      (rule 13)

	'{'            shift, and enter state 78

	Block          goto state 79

State 76

	Stmt -> 'while' Expr ':' . Block                    (rule 14)

	'{'            shift, and enter state 78

	Block          goto state 77

State 77

	Stmt -> 'while' Expr ':' Block .                    (rule 14)

	';'            reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 78

	Block -> '{' . ListStmt '}'                         (rule 5)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'if'           shift, and enter state 20
	'not'          shift, and enter state 21
	'pass'         shift, and enter state 22
	'return'       shift, and enter state 23
	'while'        shift, and enter state 24
	'}'            reduce using rule 6
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	ListStmt       goto state 99
	Stmt           goto state 8
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 15

State 79

	Stmt -> 'if' Expr ':' Block .                       (rule 12)
	Stmt -> 'if' Expr ':' Block . 'else' ':' Block      (rule 13)

	';'            reduce using rule 12
	'else'         shift, and enter state 98
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 80

	ArgType -> Type .                                   (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58


State 81

	Arg -> Ident '|' ArgType .                          (rule 27)

	')'            reduce using rule 27
	','            reduce using rule 27


State 82

	Type -> '(' . ListArgType ')' '->' Type             (rule 54)

	'('            shift, and enter state 82
	')'            reduce using rule 55
	'*'            shift, and enter state 83
	'Bool'         shift, and enter state 84
	'Int'          shift, and enter state 85
	'Str'          shift, and enter state 86
	'Void'         shift, and enter state 87

	Type           goto state 80
	ListArgType    goto state 96
	ArgType        goto state 97

State 83

	ArgType -> '*' . Type                               (rule 59)

	'('            shift, and enter state 82
	'Bool'         shift, and enter state 84
	'Int'          shift, and enter state 85
	'Str'          shift, and enter state 86
	'Void'         shift, and enter state 87

	Type           goto state 95

State 84

	Type -> 'Bool' .                                    (rule 52)

	'('            reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	':'            reduce using rule 52


State 85

	Type -> 'Int' .                                     (rule 50)

	'('            reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	':'            reduce using rule 50


State 86

	Type -> 'Str' .                                     (rule 51)

	'('            reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	':'            reduce using rule 51


State 87

	Type -> 'Void' .                                    (rule 53)

	'('            reduce using rule 53
	')'            reduce using rule 53
	','            reduce using rule 53
	':'            reduce using rule 53


State 88

	Arg -> Ident . '|' ArgType                          (rule 27)

	'|'            shift, and enter state 74


State 89

	ListArg -> Arg ',' ListArg .                        (rule 30)

	')'            reduce using rule 30


State 90

	Expr6 -> '(' ListArg ')' '->' . Type '(' Expr ')'    (rule 22)
	Expr6 -> '(' ListArg ')' '->' . Type ':' Block      (rule 23)

	'('            shift, and enter state 82
	'Bool'         shift, and enter state 84
	'Int'          shift, and enter state 85
	'Str'          shift, and enter state 86
	'Void'         shift, and enter state 87

	Type           goto state 94

State 91

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'++'           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	':'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'||'           reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 92

	ListExpr -> Expr ',' . ListExpr                     (rule 49)

	'('            shift, and enter state 16
	')'            reduce using rule 47
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 60
	ListExpr       goto state 93

State 93

	ListExpr -> Expr ',' ListExpr .                     (rule 49)

	')'            reduce using rule 49


State 94

	Expr6 -> '(' ListArg ')' '->' Type . '(' Expr ')'    (rule 22)
	Expr6 -> '(' ListArg ')' '->' Type . ':' Block      (rule 23)

	'('            shift, and enter state 104
	':'            shift, and enter state 105


State 95

	ArgType -> '*' Type .                               (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59


State 96

	Type -> '(' ListArgType . ')' '->' Type             (rule 54)

	')'            shift, and enter state 103


State 97

	ListArgType -> ArgType .                            (rule 56)
	ListArgType -> ArgType . ',' ListArgType            (rule 57)

	')'            reduce using rule 56
	','            shift, and enter state 102


State 98

	Stmt -> 'if' Expr ':' Block 'else' . ':' Block      (rule 13)

	':'            shift, and enter state 101


State 99

	Block -> '{' ListStmt . '}'                         (rule 5)

	'}'            shift, and enter state 100


State 100

	Block -> '{' ListStmt '}' .                         (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	'++'           reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	':'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'='            reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'else'         reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	%eof           reduce using rule 5


State 101

	Stmt -> 'if' Expr ':' Block 'else' ':' . Block      (rule 13)

	'{'            shift, and enter state 78

	Block          goto state 110

State 102

	ListArgType -> ArgType ',' . ListArgType            (rule 57)

	'('            shift, and enter state 82
	')'            reduce using rule 55
	'*'            shift, and enter state 83
	'Bool'         shift, and enter state 84
	'Int'          shift, and enter state 85
	'Str'          shift, and enter state 86
	'Void'         shift, and enter state 87

	Type           goto state 80
	ListArgType    goto state 109
	ArgType        goto state 97

State 103

	Type -> '(' ListArgType ')' . '->' Type             (rule 54)

	'->'           shift, and enter state 108


State 104

	Expr6 -> '(' ListArg ')' '->' Type '(' . Expr ')'    (rule 22)

	'('            shift, and enter state 16
	'-'            shift, and enter state 17
	'False'        shift, and enter state 18
	'True'         shift, and enter state 19
	'not'          shift, and enter state 21
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 25
	L_quoted       shift, and enter state 26

	Ident          goto state 27
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 9
	Expr5          goto state 10
	Expr4          goto state 11
	Expr3          goto state 12
	Expr2          goto state 13
	Expr1          goto state 14
	Expr           goto state 107

State 105

	Expr6 -> '(' ListArg ')' '->' Type ':' . Block      (rule 23)

	'{'            shift, and enter state 78

	Block          goto state 106

State 106

	Expr6 -> '(' ListArg ')' '->' Type ':' Block .      (rule 23)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'++'           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'/'            reduce using rule 23
	':'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'||'           reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 107

	Expr6 -> '(' ListArg ')' '->' Type '(' Expr . ')'    (rule 22)

	')'            shift, and enter state 112


State 108

	Type -> '(' ListArgType ')' '->' . Type             (rule 54)

	'('            shift, and enter state 82
	'Bool'         shift, and enter state 84
	'Int'          shift, and enter state 85
	'Str'          shift, and enter state 86
	'Void'         shift, and enter state 87

	Type           goto state 111

State 109

	ListArgType -> ArgType ',' ListArgType .            (rule 57)

	')'            reduce using rule 57


State 110

	Stmt -> 'if' Expr ':' Block 'else' ':' Block .      (rule 13)

	';'            reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 111

	Type -> '(' ListArgType ')' '->' Type .             (rule 54)

	'('            reduce using rule 54
	')'            reduce using rule 54
	','            reduce using rule 54
	':'            reduce using rule 54


State 112

	Expr6 -> '(' ListArg ')' '->' Type '(' Expr ')' .    (rule 22)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	'++'           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'/'            reduce using rule 22
	':'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 69
Number of terminals: 40
Number of non-terminals: 24
Number of states: 113
