diff -rupNEZbB minix_source/usr/src/minix/servers/pm/forkexit.c minix_solve/usr/src/minix/servers/pm/forkexit.c
--- minix_source/usr/src/minix/servers/pm/forkexit.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/servers/pm/forkexit.c	2023-05-14 13:18:58.003679987 +0200
@@ -85,6 +85,8 @@ int do_fork()
   procs_in_use++;
   *rmc = *rmp;			/* copy parent's process slot to child's */
   rmc->mp_parent = who_p;			/* record child's parent */
+  rmc->mp_balance = INIT_BALANCE;   /* reset balance for transfermoney */
+
   if (!(rmc->mp_trace_flags & TO_TRACEFORK)) {
 	rmc->mp_tracer = NO_TRACER;		/* no tracer attached */
 	rmc->mp_trace_flags = 0;
@@ -182,6 +184,7 @@ int do_srv_fork()
   procs_in_use++;
   *rmc = *rmp;			/* copy parent's process slot to child's */
   rmc->mp_parent = who_p;			/* record child's parent */
+  rmc->mp_balance = INIT_BALANCE;   /* reset balance for transfermoney */
   if (!(rmc->mp_trace_flags & TO_TRACEFORK)) {
 	rmc->mp_tracer = NO_TRACER;		/* no tracer attached */
 	rmc->mp_trace_flags = 0;
diff -rupNEZbB minix_source/usr/src/minix/servers/pm/main.c minix_solve/usr/src/minix/servers/pm/main.c
--- minix_source/usr/src/minix/servers/pm/main.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/servers/pm/main.c	2023-05-14 13:18:49.206971888 +0200
@@ -179,7 +179,10 @@ static int sef_cb_init_fresh(int UNUSED(
 
 		/* Set process details found in the image table. */
 		rmp = &mproc[ip->proc_nr];	
+
+        rmp->mp_balance = INIT_BALANCE;
   		strlcpy(rmp->mp_name, ip->proc_name, PROC_NAME_LEN); 
+  		
   		(void) sigemptyset(&rmp->mp_ignore);	
   		(void) sigemptyset(&rmp->mp_sigmask);
   		(void) sigemptyset(&rmp->mp_catch);
diff -rupNEZbB minix_source/usr/src/minix/servers/pm/Makefile minix_solve/usr/src/minix/servers/pm/Makefile
--- minix_source/usr/src/minix/servers/pm/Makefile	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/servers/pm/Makefile	2023-05-13 23:20:44.743274094 +0200
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c transfermoney.c
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -rupNEZbB minix_source/usr/src/minix/servers/pm/mproc.h minix_solve/usr/src/minix/servers/pm/mproc.h
--- minix_source/usr/src/minix/servers/pm/mproc.h	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/servers/pm/mproc.h	2023-05-14 13:13:41.262183567 +0200
@@ -70,6 +70,8 @@ EXTERN struct mproc {
   char mp_name[PROC_NAME_LEN];	/* process name */
 
   int mp_magic;			/* sanity check, MP_MAGIC */
+
+  int mp_balance; /* process balance for transfer_money*/
 } mproc[NR_PROCS];
 
 /* Flag values */
diff -rupNEZbB minix_source/usr/src/minix/servers/pm/proto.h minix_solve/usr/src/minix/servers/pm/proto.h
--- minix_source/usr/src/minix/servers/pm/proto.h	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/servers/pm/proto.h	2023-05-14 16:26:42.370416379 +0200
@@ -89,3 +89,6 @@ struct mproc *find_proc(pid_t lpid);
 int nice_to_priority(int nice, unsigned *new_q);
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
+
+/* transfermoney.c */
+int do_transfermoney(void);
diff -rupNEZbB minix_source/usr/src/minix/servers/pm/table.c minix_solve/usr/src/minix/servers/pm/table.c
--- minix_source/usr/src/minix/servers/pm/table.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/servers/pm/table.c	2023-05-13 21:52:27.828893685 +0200
@@ -58,5 +58,7 @@ int (* const call_vec[NR_PM_CALLS])(void
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo		/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,	/* getsysinfo(2) */
+    CALL(PM_TRANSFER_MONEY) = do_transfermoney  /* transfermoney */
+
 };
diff -rupNEZbB minix_source/usr/src/minix/servers/pm/transfermoney.c minix_solve/usr/src/minix/servers/pm/transfermoney.c
--- minix_source/usr/src/minix/servers/pm/transfermoney.c	1970-01-01 01:00:00.000000000 +0100
+++ minix_solve/usr/src/minix/servers/pm/transfermoney.c	2023-05-14 15:37:38.901478920 +0200
@@ -0,0 +1,62 @@
+#include "pm.h"
+#include <minix/callnr.h>
+#include <errno.h>
+#include "mproc.h"
+#include "stdio.h"
+
+int _check_inheritance(struct mproc *rm_from, struct mproc *rm_to){
+    int mproc_index = rm_from->mp_parent;
+
+    while (mproc_index != INIT_PROC_NR && &mproc[mproc_index] != rm_to) {
+        mproc_index = mproc[mproc_index].mp_parent;
+    }
+    
+    if (&mproc[mproc_index] == rm_to)
+        return (EPERM);
+    
+    mproc_index = rm_to->mp_parent;
+
+    while (mproc_index != INIT_PROC_NR && &mproc[mproc_index] != rm_from) {
+        mproc_index = mproc[mproc_index].mp_parent;
+    }
+    
+    if (&mproc[mproc_index] == rm_from)
+        return (EPERM);
+    
+    return (OK);
+}
+
+/*===========================================================================*
+ *				do_transfermoney				     *
+ *===========================================================================*/
+ int do_transfermoney()
+ {
+    struct mproc *rm_from;
+    struct mproc *rm_to;
+
+    int amount = m_in.m_pm_transfer_money.amount;
+
+    rm_from = mp; // mp - process slot of the caller
+
+    // printf("[pm] balance = %d, amount = %d\n", rm_from->mp_balance, amount);
+    if ((rm_to = find_proc(m_in.m_pm_transfer_money.recipient_pid)) == NULL || !(rm_to->mp_flags & IN_USE))
+        return (ESRCH);
+    
+    // printf("[pm] transfer [%d] money from [%d] to [%d]\n", amount, rm_from->mp_pid, rm_to->mp_pid);
+    
+    // check if processes are in "potomek-przodek" relation
+    if (_check_inheritance(rm_from, rm_to) != OK)
+        return (EPERM);
+
+    if (amount < 0 || rm_from->mp_balance - amount < 0 || rm_to->mp_balance + amount > MAX_BALANCE )
+        return (EINVAL);
+
+    rm_from->mp_balance -= amount;
+    rm_to->mp_balance += amount;
+
+    mp->mp_reply.m_pm_transfer_money.new_balance = rm_from->mp_balance;
+    
+    // printf("[pm] new balance = %d\n", m_in.m_pm_transfer_money.new_balance);
+    
+    return (OK);
+ }
diff -rupNEZbB minix_source/usr/src/lib/libc/misc/Makefile.inc minix_solve/usr/src/lib/libc/misc/Makefile.inc
--- minix_source/usr/src/lib/libc/misc/Makefile.inc	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/lib/libc/misc/Makefile.inc	2023-05-14 16:28:40.515926619 +0200
@@ -8,3 +8,6 @@ SRCS+=	initfini.c
 
 # for -fstack-protector
 SRCS+=	stack_protector.c
+
+# transfermoney
+SRCS+= transfermoney.c
diff -rupNEZbB minix_source/usr/src/lib/libc/misc/transfermoney.c minix_solve/usr/src/lib/libc/misc/transfermoney.c
--- minix_source/usr/src/lib/libc/misc/transfermoney.c	1970-01-01 01:00:00.000000000 +0100
+++ minix_solve/usr/src/lib/libc/misc/transfermoney.c	2023-05-14 16:29:01.469613306 +0200
@@ -0,0 +1,16 @@
+#include <lib.h>
+#include <minix/rs.h>
+#include <stdio.h>
+#include <string.h>
+
+int transfermoney(pid_t recipient, int amount) {
+    message m;
+	memset(&m, 0, sizeof(m));
+
+    m.m_pm_transfer_money.amount = amount;
+    m.m_pm_transfer_money.recipient_pid = recipient;
+    
+    if (_syscall(PM_PROC_NR, PM_TRANSFER_MONEY, &m) < 0) return -1;
+
+    return m.m_pm_transfer_money.new_balance;    
+}
diff -rupNEZbB minix_source/usr/src/minix/include/minix/callnr.h minix_solve/usr/src/minix/include/minix/callnr.h
--- minix_source/usr/src/minix/include/minix/callnr.h	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/include/minix/callnr.h	2023-05-13 21:16:43.456280275 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_TRANSFER_MONEY   (PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB minix_source/usr/src/minix/include/minix/config.h minix_solve/usr/src/minix/include/minix/config.h
--- minix_source/usr/src/minix/include/minix/config.h	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/include/minix/config.h	2023-05-14 13:14:01.827839020 +0200
@@ -73,6 +73,9 @@
 #define USER_DEFAULT_CPU	-1 /* use the default cpu or do not change the
 				      current one */
 
+#define INIT_BALANCE 100
+#define MAX_BALANCE 1000 
+
 /*===========================================================================*
  *	There are no user-settable parameters after this line		     *
  *===========================================================================*/
diff -rupNEZbB minix_source/usr/src/minix/include/minix/ipc.h minix_solve/usr/src/minix/include/minix/ipc.h
--- minix_source/usr/src/minix/include/minix/ipc.h	2014-09-13 23:56:50.000000000 +0200
+++ minix_solve/usr/src/minix/include/minix/ipc.h	2023-05-14 01:02:03.900621905 +0200
@@ -1588,6 +1588,15 @@ typedef struct {
 _ASSERT_MSG_SIZE(mess_pm_sched_scheduling_set_nice);
 
 typedef struct {
+    pid_t recipient_pid;
+    int amount;
+    int new_balance;
+
+    uint8_t padding[44];
+} mess_pm_transfer_money;
+_ASSERT_MSG_SIZE(mess_pm_transfer_money);
+
+typedef struct {
 	int status;
 
 	uint8_t padding[52];
@@ -2208,6 +2217,7 @@ typedef struct {
 		mess_pm_lsys_getprocnr	m_pm_lsys_getprocnr;
 		mess_pm_lsys_sigs_signal m_pm_lsys_sigs_signal;
 		mess_pm_sched_scheduling_set_nice m_pm_sched_scheduling_set_nice;
+        mess_pm_transfer_money m_pm_transfer_money;
 		mess_readclock_lc_rtcdev m_readclock_lc_rtcdev;
 		mess_rs_init		m_rs_init;
 		mess_rs_pm_exec_restart	m_rs_pm_exec_restart;
diff -rupNEZbB minix_source2/usr/include/minix/callnr.h minix_source/usr/include/minix/callnr.h
--- minix_source2/usr/include/minix/callnr.h	2014-09-14 11:00:44.000000000 +0200
+++ minix_source/usr/include/minix/callnr.h	2023-05-14 20:10:33.000000000 +0200
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_TRANSFER_MONEY   (PM_BASE + 48)
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -rupNEZbB minix_source2/usr/include/minix/config.h minix_source/usr/include/minix/config.h
--- minix_source2/usr/include/minix/config.h	2014-09-14 11:00:44.000000000 +0200
+++ minix_source/usr/include/minix/config.h	2023-05-14 20:10:33.000000000 +0200
@@ -73,6 +73,9 @@
 #define USER_DEFAULT_CPU	-1 /* use the default cpu or do not change the
 				      current one */
 
+#define INIT_BALANCE 100
+#define MAX_BALANCE 1000 
+
 /*===========================================================================*
  *	There are no user-settable parameters after this line		     *
  *===========================================================================*/
diff -rupNEZbB minix_source2/usr/include/minix/ipc.h minix_source/usr/include/minix/ipc.h
--- minix_source2/usr/include/minix/ipc.h	2014-09-14 11:00:44.000000000 +0200
+++ minix_source/usr/include/minix/ipc.h	2023-05-14 20:10:33.000000000 +0200
@@ -1588,6 +1588,15 @@ typedef struct {
 _ASSERT_MSG_SIZE(mess_pm_sched_scheduling_set_nice);
 
 typedef struct {
+    pid_t recipient_pid;
+    int amount;
+    int new_balance;
+
+    uint8_t padding[44];
+} mess_pm_transfer_money;
+_ASSERT_MSG_SIZE(mess_pm_transfer_money);
+
+typedef struct {
 	int status;
 
 	uint8_t padding[52];
@@ -2208,6 +2217,7 @@ typedef struct {
 		mess_pm_lsys_getprocnr	m_pm_lsys_getprocnr;
 		mess_pm_lsys_sigs_signal m_pm_lsys_sigs_signal;
 		mess_pm_sched_scheduling_set_nice m_pm_sched_scheduling_set_nice;
+        mess_pm_transfer_money m_pm_transfer_money;
 		mess_readclock_lc_rtcdev m_readclock_lc_rtcdev;
 		mess_rs_init		m_rs_init;
 		mess_rs_pm_exec_restart	m_rs_pm_exec_restart;
--- minix_source2/usr/src/include/unistd.h	2014-09-13 23:56:50.000000000 +0200
+++ minix_source/usr/src/include/unistd.h	2023-05-14 20:36:27.000000000 +0200
@@ -143,7 +143,7 @@ int	 tcsetpgrp(int, pid_t);
 __aconst char *ttyname(int);
 int	 unlink(const char *);
 ssize_t	 write(int, const void *, size_t);
-
+int transfermoney(pid_t recipient, int amount);
 
 /*
  * IEEE Std 1003.2-92, adopted in X/Open Portability Guide Issue 4 and later
--- minix_source2/usr/include/unistd.h	2014-09-14 11:00:43.000000000 +0200
+++ minix_source/usr/include/unistd.h	2023-05-14 20:20:26.000000000 +0200
@@ -143,7 +143,7 @@ int	 tcsetpgrp(int, pid_t);
 __aconst char *ttyname(int);
 int	 unlink(const char *);
 ssize_t	 write(int, const void *, size_t);
-
+int transfermoney(pid_t recipient, int amount);
 
 /*
  * IEEE Std 1003.2-92, adopted in X/Open Portability Guide Issue 4 and later
